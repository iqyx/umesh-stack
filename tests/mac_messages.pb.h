/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.6-dev at Sun Mar 13 14:08:56 2016. */

#ifndef PB_MAC_MESSAGES_PB_H_INCLUDED
#define PB_MAC_MESSAGES_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _EncryptionScheme {
    EncryptionScheme_no_encryption = 0,
    EncryptionScheme_aes128_hmac_sha256_trunc4 = 1,
    EncryptionScheme_chacha20_poly1305_trunc4 = 2
} EncryptionScheme;
#define _EncryptionScheme_MIN EncryptionScheme_no_encryption
#define _EncryptionScheme_MAX EncryptionScheme_chacha20_poly1305_trunc4
#define _EncryptionScheme_ARRAYSIZE ((EncryptionScheme)(EncryptionScheme_chacha20_poly1305_trunc4+1))

/* Struct definitions */
typedef struct _NodeAdvertisement {
    char dummy_field;
/* @@protoc_insertion_point(struct:NodeAdvertisement) */
} NodeAdvertisement;

typedef PB_BYTES_ARRAY_T(64) Layer2Message_data_t;
typedef PB_BYTES_ARRAY_T(4) Layer2Message_nonce_t;
typedef PB_BYTES_ARRAY_T(16) Layer2Message_mac_t;
typedef struct _Layer2Message {
    int32_t message_type;
    bool has_encryption_scheme;
    EncryptionScheme encryption_scheme;
    Layer2Message_data_t data;
    bool has_nonce;
    Layer2Message_nonce_t nonce;
    bool has_mac;
    Layer2Message_mac_t mac;
/* @@protoc_insertion_point(struct:Layer2Message) */
} Layer2Message;

typedef struct _Layer3Message {
    pb_size_t which_content;
    union {
        NodeAdvertisement node_advertisement;
    } content;
/* @@protoc_insertion_point(struct:Layer3Message) */
} Layer3Message;

/* Default values for struct fields */
extern const EncryptionScheme Layer2Message_encryption_scheme_default;

/* Initializer values for message structs */
#define Layer2Message_init_default               {0, false, EncryptionScheme_no_encryption, {0, {0}}, false, {0, {0}}, false, {0, {0}}}
#define Layer3Message_init_default               {0, {NodeAdvertisement_init_default}}
#define NodeAdvertisement_init_default           {0}
#define Layer2Message_init_zero                  {0, false, (EncryptionScheme)0, {0, {0}}, false, {0, {0}}, false, {0, {0}}}
#define Layer3Message_init_zero                  {0, {NodeAdvertisement_init_zero}}
#define NodeAdvertisement_init_zero              {0}

/* Field tags (for use in manual encoding/decoding) */
#define Layer2Message_message_type_tag           1
#define Layer2Message_encryption_scheme_tag      2
#define Layer2Message_data_tag                   3
#define Layer2Message_nonce_tag                  4
#define Layer2Message_mac_tag                    5
#define Layer3Message_node_advertisement_tag     1

/* Struct field encoding specification for nanopb */
extern const pb_field_t Layer2Message_fields[6];
extern const pb_field_t Layer3Message_fields[2];
extern const pb_field_t NodeAdvertisement_fields[1];

/* Maximum encoded size of messages (where known) */
#define Layer2Message_size                       103
#define Layer3Message_size                       2
#define NodeAdvertisement_size                   0

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MAC_MESSAGES_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
